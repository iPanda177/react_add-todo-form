{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","todoClass","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","errorTitle","setErrorTitle","errorUser","setErrorUser","maxId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","trim","push","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3a168a7.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype UserType = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserType> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\nimport { UserInfo } from '../UserInfo';\n\ntype TodoType = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<TodoType> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  const todoClass = classNames(\n    'TodoInfo',\n    { 'TodoInfo--completed': completed },\n  );\n\n  return (\n    <article\n      data-id={id}\n      className={todoClass}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Todos = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Todos> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const maxId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setErrorTitle(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setErrorUser(false);\n  };\n\n  const addUser = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newTodo = {\n      id: maxId,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    if (title.trim() && userId) {\n      todos.push(newTodo);\n      setTitle('');\n      setUserId(0);\n    } else {\n      setErrorTitle(title.trim() === '');\n      setErrorUser(userId === 0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addUser}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(({ id, name }) => (\n                <option key={id} value={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}